import pandas as pd
import matplotlib.pyplot as plt

# ==================== AGE DISTRIBUTION ANALYSIS ====================
print("\n" + "="*40 + " AGE ANALYSIS " + "="*40)

ages = [
    50, 55, 76, 57, 53, 93, 50, 29, 31, 52, 50, 80, 37, 55, 40, 56, 46, 42, 40, 48,
    25, 45, 35, 50, 31, 45, 51, 40, 36, 55, 30, 40, 40, 44, 44, 28, 48, 40, 39, 38,
    55, 36, 55, 60, 30, 40, 48, 35, 38, 35, 50, 39, 40, 32, 46, 57, 32, 50, 48, 45,
    53, 54, 56, 50, 43, 45
]

# Create DataFrame and bin ages
age_df = pd.DataFrame(ages, columns=['Age'])
bins = [20, 30, 40, 50, 60, 70, 80, 90]
labels = ['20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80-89']
age_df['Age_Group'] = pd.cut(age_df['Age'], bins=bins, right=False, labels=labels)

# Count and visualize
age_counts = age_df['Age_Group'].value_counts().sort_index()
print("\nAge Distribution:")
print(age_counts)

plt.figure(figsize=(10, 5))
age_counts.plot(kind='bar', color='skyblue', edgecolor='black')
plt.title('Age Distribution of Weavers')
plt.xlabel('Age Group')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

# ==================== GENDER DISTRIBUTION ANALYSIS ====================
print("\n" + "="*40 + " GENDER ANALYSIS " + "="*40)

gender_data = [
    0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,
    1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
    1, 0, 1, 1, 1, 1
]

gender_df = pd.DataFrame(gender_data, columns=['Gender'])
gender_df['Gender'] = gender_df['Gender'].map({0: 'Male', 1: 'Female'})
gender_counts = gender_df['Gender'].value_counts()

print("\nGender Distribution:")
print(gender_counts)

plt.figure(figsize=(6, 6))
gender_counts.plot(kind='pie', autopct='%1.1f%%', colors=['lightblue', 'lightpink'])
plt.title('Gender Distribution')
plt.ylabel('')
plt.show()

# ==================== CASTE DISTRIBUTION ANALYSIS ====================
print("\n" + "="*40 + " CASTE ANALYSIS " + "="*40)

caste_data = [
    0,3,1,1,0,1,0,3,0,1,0,1,0,3,3,0,0,0,0,3,3,3,3,1,1,0,3,1,3,1,1,1,0,1,0,0,
    3,3,3,3,0,3,1,1,3,3,3,2,0,0,0,1,0,0,0,0,1,2,1,1,0,1,1,1,0,0
]

caste_mapping = {0: "General", 1: "SC", 2: "ST", 3: "OBC"}
caste_df = pd.DataFrame(caste_data, columns=['Caste'])
caste_df['Caste'] = caste_df['Caste'].map(caste_mapping)
caste_counts = caste_df['Caste'].value_counts()

print("\nCaste Distribution:")
print(caste_counts)

plt.figure(figsize=(8, 5))
caste_counts.plot(kind='bar', color=['#4e79a7', '#f28e2b', '#e15759', '#76b7b2'])
plt.title('Caste Distribution')
plt.xlabel('Caste Category')
plt.ylabel('Count')
plt.xticks(rotation=0)
plt.grid(axis='y', alpha=0.3)
plt.show()

# ==================== AMENITIES ANALYSIS ====================
print("\n" + "="*40 + " AMENITIES ANALYSIS " + "="*40)

amenities_data = [
    [0,1,2,3], [0,1,2,3], [0,1,2,3], [0,1,2,3], [0,1,2,3],
    [0,1,3], [0,1,2], [0,1,2], [0,1,2], [0,1,2,3],
    [0,1], [0,1,2,3], [0,1,3], [0], [0,1,2,3],
    [0,1,2,3], [0], [0,1,3], [0,1,2], [0,2],
    [0,1,2,3], [0,1,2,3], [0,1,2,3], [0,1,2,3], [0,1,3],
    [0,3], [0,3], [0,1], [0,1,2], [0,1,2,3],
    [0], [0], [0], [1], [1], [1]
]

amenities_map = {0: 'Electricity', 1: 'Clean Water', 2: 'Sanitation', 3: 'Internet'}
amenities_df = pd.DataFrame(columns=amenities_map.values())

for household in amenities_data:
    row = {amenity: 1 if code in household else 0 for code, amenity in amenities_map.items()}
    amenities_df = amenities_df.append(row, ignore_index=True)

availability = amenities_df.sum().sort_values(ascending=False)
percentage = (availability / len(amenities_df) * 100

print("\nAmenities Availability:")
print(pd.DataFrame({'Count': availability, 'Percentage': percentage.round(1)}))

plt.figure(figsize=(10, 5))
bars = plt.bar(percentage.index, percentage, color=['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728'])
plt.title('Household Amenities Availability')
plt.ylabel('Percentage (%)')
plt.ylim(0, 100)

for bar in bars:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2, height, f'{height:.1f}%', 
             ha='center', va='bottom')

plt.grid(axis='y', alpha=0.2)
plt.tight_layout()
plt.show()
